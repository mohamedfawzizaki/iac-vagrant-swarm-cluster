version: "3.9"

services:
  frontend:
    image: mohamedfawzi/react-nginx-image:v1.1.0
    ports:
      - "80:80"
      - "443:443"
    environment:
      NODE_ENV: production
    configs:
      - source: frontend_nginx_conf
        target: /etc/nginx/conf.d/default.conf
      - source: frontend_error_page
        target: /usr/share/nginx/html/error.html
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == worker]
      restart_policy:
        condition: on-failure
    networks:
      public-net:
        aliases: [frontend_container, f_container]

  proxy:
    image: nginx:latest
    configs:
      - source: proxy_nginx_conf
        target: /etc/nginx/conf.d/default.conf
      - source: proxy_error_page
        target: /usr/share/nginx/html/error.html
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - public-net
      - private-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

  base_backend:
    image: mohamedfawzi/backend-nodejs-image:v1.1.0
    expose:
      - "3000"
    env_file:
      - ./services/backend/backend.env.example
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - private-net

  mysql-db:
    image: mysql:8.0
    env_file:
      - ./services/database/mysql.env.example
    volumes:
      - mysql-data:/var/lib/mysql
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - private-net

  phpmyadmin:
    image: phpmyadmin:latest
    ports:
      - "8080:80"
    env_file:
      - ./services/phpmyadmin/phpmyadmin.env.example
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - public-net
      - private-net

  redis:
    image: redis:latest
    command: >
      sh -c "redis-server --requirepass $$REDIS_PASSWORD --save 60 1 --loglevel warning"
    env_file:
      - ./services/redis/redis.env.example
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "$$REDIS_PASSWORD", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    networks:
      - private-net

configs:
  frontend_nginx_conf:
    file: ./services/frontend/nginx/nginx.conf
  frontend_error_page:
    file: ./services/frontend/nginx/error.html
  proxy_nginx_conf:
    file: ./services/proxy/nginx.conf
  proxy_error_page:
    file: ./services/proxy/error.html

networks:
  public-net:
    driver: overlay

  private-net:
    driver: overlay
    internal: true

volumes:
  redis-data:
  mysql-data:
